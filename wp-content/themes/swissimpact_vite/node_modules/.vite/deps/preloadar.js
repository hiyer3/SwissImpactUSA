import {
  __commonJS
} from "./chunk-TCQZMY3T.js";

// node_modules/preloadar/dist/preloadar.js
var require_preloadar = __commonJS({
  "node_modules/preloadar/dist/preloadar.js"(exports, module) {
    !function(e, t) {
      "object" == typeof exports && "object" == typeof module ? module.exports = t() : "function" == typeof define && define.amd ? define([], t) : "object" == typeof exports ? exports.preloadar = t() : e.preloadar = t();
    }(self, function() {
      return (() => {
        "use strict";
        var e = {};
        return (() => {
          var t = e, n = function() {
            function e2() {
              var e3 = this;
              this.def = { packageName: "Preloadar", elements: { container: "#preloadarContainer" }, optionDatas: { type: "page", animation: "spin", duration: 10, delay: 500, start: 0, end: 100, step: 1, unit: "%", color: "#2b84e4", secondaryColor: "#e8e7e7", bgColor: "#ffffff", progressElement: "", progress: 0, onActive: function() {
                return "";
              }, onComplete: function() {
                return "";
              } }, styles: { css: { color: "--preloadar-main-color", secondaryColor: "--preloadar-main-alt-color", bg: "--preloadar-bg-color" }, type: { page: "preloadarPage", topBar: "preloadarTopBar" }, body: "preloadarBodyStyle", scale: "preloadarScaleStyle", rotate: "preloadarRotateStyle", topBar: "preloadarTopBarStyle", spin: ["preloadarSpinStyle", "style"], hide: "preloadarHide" } }, this.helperFunc = { log: function(t2) {
                return console.log("%c" + e3.def.packageName + ":", "background-color:red; padding:3px 5px; border-radius:3px; color:white;", "" + t2);
              }, isEmpty: function(e4) {
                return "" === e4 || null == e4;
              }, attributeExist: function(e4) {
                var t2;
                return null === (t2 = document.querySelector(e4.element)) || void 0 === t2 ? void 0 : t2.hasAttribute(e4.attribute);
              }, getDOMElement: function(e4) {
                return document.querySelector(e4);
              }, verifyOptions: function(t2) {
                e3.helperFunc.isEmpty(t2) || Object.keys(t2).forEach(function(n2) {
                  e3.helperFunc.isEmpty(t2[n2]) ? e3.helperFunc.log("No value set in " + n2) : e3.def.optionDatas[n2] = t2[n2];
                });
              }, changeCssVariable: function(t2, n2) {
                e3.helperFunc.getDOMElement(":root").style.setProperty(t2, n2);
              }, domAction: function(t2) {
                switch (t2.action.toLowerCase()) {
                  case "hide":
                    e3.helperFunc.getDOMElement(t2.element).style.display = "none";
                    break;
                  case "show":
                    e3.helperFunc.getDOMElement(t2.element).style.display = "block";
                    break;
                  case "flex":
                    e3.helperFunc.getDOMElement(t2.element).style.display = "flex";
                }
              }, argumentsValidation: function() {
                for (var t2 = [], n2 = 0; n2 < arguments.length; n2++)
                  t2[n2] = arguments[n2];
                var o = e3.helperFunc.log;
                switch (true) {
                  case t2.length < 1:
                    return o("Specify element to preload"), false;
                  case (1 === t2.length && null === !e3.helperFunc.getDOMElement(t2[0])):
                    return o("Please specify an element within the DOM"), false;
                  case (1 === t2.length && "string" != typeof t2[0]):
                    return o("String only accepted as first parameter"), false;
                  case (2 === t2.length && "string" != typeof t2[0]):
                    return o("First argument only accepts strings"), false;
                  case (2 === t2.length && "object" != typeof t2[1]):
                    return o("Second argument only accepts object"), false;
                  case (2 === t2.length && null === e3.helperFunc.getDOMElement(t2[0])):
                    return o("Element specify doesn't exist in dom, please check again"), false;
                  case t2.length > 2:
                    return o("accepts only two argument `element` and `options`"), false;
                  default:
                    return e3.helperFunc.verifyOptions(t2[1]), true;
                }
              } };
            }
            return e2.run = function() {
              return e2.instance || (this.instance = new e2()), this.instance;
            }, e2.prototype.show = function() {
              for (var e3, t2 = [], n2 = 0; n2 < arguments.length; n2++)
                t2[n2] = arguments[n2];
              if ((e3 = this.helperFunc).argumentsValidation.apply(e3, t2)) {
                var o = this.helperFunc.getDOMElement(t2[0]);
                switch (this.helperFunc.domAction({ element: t2[0], action: "flex" }), o.classList.remove(this.def.styles.hide), o.classList.add(this.def.styles.type[this.def.optionDatas.type]), this.helperFunc.getDOMElement("body").classList.add(this.def.styles.body), this.def.optionDatas.color && this.helperFunc.changeCssVariable(this.def.styles.css.color, this.def.optionDatas.color), this.def.optionDatas.bgColor && this.helperFunc.changeCssVariable(this.def.styles.css.bg, this.def.optionDatas.bgColor), this.def.optionDatas.secondaryColor && this.helperFunc.changeCssVariable(this.def.styles.css.secondaryColor, this.def.optionDatas.secondaryColor), this.def.optionDatas.onActive && this.def.optionDatas.onActive(), true) {
                  case -1 !== ["scale", "rotate"].indexOf(this.def.optionDatas.animation):
                    o.children[0] ? o.children[0].classList.add(this.def.styles[this.def.optionDatas.animation]) : this.helperFunc.log('No child element to animate found in element with this identifier "' + t2[0] + '"');
                    break;
                  case "topBar" === this.def.optionDatas.animation:
                    o.innerHTML = "";
                    var a = document.createElement("div");
                    a.classList.add(this.def.styles[this.def.optionDatas.animation]), o.append(a);
                    break;
                  default:
                    o.innerHTML = "", o.insertAdjacentHTML("beforeend", '<div class="loadar ' + this.def.optionDatas.animation + '"></div>');
                }
              }
            }, e2.prototype.hide = function() {
              for (var e3, t2 = this, n2 = [], o = 0; o < arguments.length; o++)
                n2[o] = arguments[o];
              var a = this.helperFunc.getDOMElement(n2[0]), s = false;
              a ? (2 === n2.length && (e3 = this.helperFunc).argumentsValidation.apply(e3, n2), Object.values(this.def.styles.type).forEach(function(e4) {
                a.classList.contains(e4) && (s = true);
              }), s ? (a.classList.add(this.def.styles.hide), this.helperFunc.getDOMElement(this.def.elements.container) && this.helperFunc.getDOMElement(this.def.elements.container).setAttribute("style", "display: block !important"), a.addEventListener("transitionend", function() {
                t2.helperFunc.domAction({ element: n2[0], action: "hide" }), t2.helperFunc.getDOMElement("body").classList.remove(t2.def.styles.body);
              }), this.def.optionDatas.onComplete && this.def.optionDatas.onComplete()) : this.helperFunc.log("element with the identifier of " + n2[0] + " doesn't have the instance of preloadar")) : this.helperFunc.log("element with the identifier of " + n2[0] + " doesn't exist");
            }, e2.prototype.auto = function() {
              for (var e3 = this, t2 = [], n2 = 0; n2 < arguments.length; n2++)
                t2[n2] = arguments[n2];
              this.show.apply(this, t2), document.addEventListener("readystatechange", function() {
                "complete" === document.readyState && setTimeout(function() {
                  e3.hide.apply(e3, t2);
                }, e3.def.optionDatas.delay);
              });
            }, e2.prototype.manual = function() {
              for (var e3 = this, t2 = [], n2 = 0; n2 < arguments.length; n2++)
                t2[n2] = arguments[n2];
              this.show.apply(this, t2);
              var o = this.def.optionDatas.start, a = setInterval(function() {
                o === e3.def.optionDatas.end ? (clearInterval(a), e3.hide.apply(e3, t2)) : (o += e3.def.optionDatas.step, e3.def.optionDatas.progress = Math.round(o / e3.def.optionDatas.end * 100), e3.def.optionDatas.progressElement && (e3.helperFunc.getDOMElement(e3.def.optionDatas.progressElement).innerHTML = e3.def.optionDatas.progress.toString()));
              }, this.def.optionDatas.end);
            }, e2;
          }();
          t.default = n;
        })(), e.default;
      })();
    });
  }
});
export default require_preloadar();
//# sourceMappingURL=preloadar.js.map
